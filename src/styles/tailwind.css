@tailwind base;

@tailwind components;

body {
	@apply text-lg;
	/* @apply text-lg bg-offwhite; */
	background: #fbfbfd;
}

/* ===-===  STYLING OF MDX-GENERATED HTML ELEMENTS  ===-===-===-===-===-===-===
* Instances where we use MDX to give us basic HTML elements, so we style those
* elements here (vs. creating a custom component).
* 
* For example:
* # My header
*
* becomes <h1>My header</h1>. Styling for that h1 is specified here.
*
* Everything here is specified as a child of a .post class. Both spec and blog
* pages have this class applied (in `specMdxTemplate.js`).
*/

/* == Headers ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
.post h1 {
	@apply mb-3 text-4xl leading-tight border-b-4 border-offblack font-jdheader;
}

.post h2 {
	@apply mt-6 mb-3 mr-6 text-3xl leading-tight border-b-2 border-offblack font-jdheader;
}

.post h3 {
	@apply mt-6 mb-3 mr-10 text-2xl leading-tight border-b-2 border-gray-700 font-jdheader;
}

/* == Paragraph + body text  ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
/* Give all paragraphs a bit of margin, except .footnote-content. This class
* is applied in the <Footnote> definition at `components/footnote.js`.
*/
.post p:not(.footnote-content) {
	@apply mb-4 mr-2;
}

/* The default bold is a little too bold (700). */
.post strong {
	@apply font-semibold;
}

/* == Lists   ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
.post ol {
	@apply mb-4 ml-8 mr-6 list-decimal list-outside;
}

.post ul {
	@apply mb-4 ml-8 mr-6 list-disc list-outside;
}

/* == Dividers   ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
.post hr {
	border: 0;
	height: 1px;
	background: #555;
	background-image: linear-gradient(to right, #ddd, #555, #ddd);
	@apply m-4;
}
@screen sm {
	.post hr {
		@apply m-8;
	}
}

/* == Links   ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
/* -- Spec posts: blue links */
.spec-post a:link {
	@apply border-b-2 border-blue-600;
}

.spec-post a:visited {
	@apply border-b-2 border-gray-400;
}

.spec-post a:hover {
	@apply text-blue-600 border-b-4 border-blue-600;
}

.spec-post a:focus {
	@apply text-blue-600 border-b-4 border-blue-600 outline-none;
}

.spec-post a:active {
	@apply bg-blue-600 border-b-2 border-blue-600 text-offwhite;
}

a.no-style-link:link {
	@apply underline border-b-0;
}

/* -- Blog posts: yellow links */
.blog-post a:link {
	@apply border-b-2 border-yellow-600;
}

.blog-post a:visited {
	@apply border-b-2 border-gray-400;
}

.blog-post a:hover {
	@apply text-yellow-600 border-b-4 border-yellow-600;
}

.blog-post a:focus {
	@apply text-yellow-600 border-b-4 border-yellow-600 outline-none;
}

.blog-post a:active {
	@apply bg-yellow-600 border-b-2 border-yellow-600 text-offwhite;
}

/* -- Table of contents: all custom shizzle */
nav.tableofcontents a:hover {
	@apply font-semibold;
}
nav.tableofcontents a:focus {
	@apply pl-2 font-semibold border-2 rounded shadow-md outline-none border-offblack;
}
/* Remember, a:focus cascades to a:active. (What does this do?!) */
nav.tableofcontents a:active {
	@apply font-semibold text-blue-600 border-none shadow-none;
}

/* == Using `code` backticks for inline JD blocks :-)   ==-==-==-==-==-==-== */
.spec-post code {
	@apply px-1 whitespace-pre border border-blue-700 rounded-sm bg-blue-50 font-jdmono;
}
.blog-post code {
	@apply px-1 whitespace-pre border border-yellow-700 rounded-sm bg-yellow-50 font-jdmono;
}

/* == Blockquote on a blog post styles as the date   ==-==-==-==-==-==-==-== */
.blog-post blockquote {
	@apply text-sm text-gray-700;
}

/* ===-=== STYLING OF GOOD OL' FASHIONED HTML ELEMENTS  ===-===-===-===-===-===
* This is stuff where you've manually written HTML and applied a class.
*/

/* == JD inline blocks ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
/* Yeah, there's still a few of these. They're the exception, where you need
 * a larger block for some reason. See: the first introduction of the numbers
 * on the home page.
 */
.jd-inline {
	@apply px-1 whitespace-pre border border-blue-700 rounded-sm bg-blue-50 font-jdmono;
}

/* == Site header (components/header.js) ==-==-==-==-==-==-==-==-==-==-==-== */
a#spec-header:focus {
	@apply bg-blue-600 border-blue-600 outline-none text-offwhite;
}
a#blog-header:focus {
	@apply bg-yellow-600 border-yellow-600 outline-none text-offwhite;
}

/* == Multi-line JD blocks   ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
.jd-block {
	@apply inline-block px-4 py-2 text-sm whitespace-pre border-2 border-blue-700 rounded-sm shadow-md bg-blue-50 font-jdmono;
}
@screen sm {
	.jd-block {
		@apply text-base;
	}
}

/* == Email subject examples ==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-== */
.emailSubject {
	@apply p-1 mb-4 text-sm bg-gray-200 border border-gray-600 rounded-sm font-jdmono;
	text-indent: -9ch;
	padding-left: 10ch;
	/* white-space: normal; */
}
@screen sm {
	.emailSubject {
		@apply text-base;
	}
}

/* ===-=== THE REAL CUSTOM SHIZZLE  ===-===-===-===-===-===-===-===-===-===-===
* Styling for stuff that isn't even really HTML any more.
*/

/* == The blinking cursor in your Terminal window    ==-==-==-==-==-==-==-== */
/* Stolen from: https://codepen.io/ArtemGordinsky/pen/GnLBq */
.blinking-cursor {
	font-weight: 400;
	font-size: 20px;
	color: #ffffff;
	-webkit-animation: 1s blink step-end infinite;
	-moz-animation: 1s blink step-end infinite;
	-ms-animation: 1s blink step-end infinite;
	-o-animation: 1s blink step-end infinite;
	animation: 1s blink step-end infinite;
}

@keyframes "blink" {
	from,
	to {
		color: transparent;
	}
	50% {
		color: rgb(251, 191, 36);
	}
}

@-moz-keyframes blink {
	from,
	to {
		color: transparent;
	}
	50% {
		color: rgb(251, 191, 36);
	}
}

@-webkit-keyframes "blink" {
	from,
	to {
		color: transparent;
	}
	50% {
		color: rgb(251, 191, 36);
	}
}

@-ms-keyframes "blink" {
	from,
	to {
		color: transparent;
	}
	50% {
		color: rgb(251, 191, 36);
	}
}

@-o-keyframes "blink" {
	from,
	to {
		color: transparent;
	}
	50% {
		color: rgb(251, 191, 36);
	}
}

/* == Hiding certain BlogIndexItems for index pages  ==-==-==-==-==-==-==-== */
/** The thing where you hide certain 'BlogIndexItem's depending on whether
  * they have a class assigned, that class corresponding to the #tag.
  *
  * 1. On each new tag index page that you create, wrap <BlogIndexItems />
  *    in a div with a class of `blog-tag-{the tag}`.
  * 2. The definition here then identifies just that div on just that page,
  *    and within that div it hides anything that does *not* include the class
  *    which is the tag.
  * 3. That class gets loaded on to that div in the definition of
  *    <BlogIndexItem />.
  */
.blog-tag-new-system .blog-index-item:not(.new-system) {
	@apply hidden;
}
.blog-tag-meta .blog-index-item:not(.meta) {
	@apply hidden;
}

/* === END   ===*===*===*===*===*===*===*===*===*===*===*===*===*===*===*=== */

@tailwind utilities;

/* === RETIRED - delete me when you're done == === === === === === === ===   */
/*


Don't know if this was even used? It wasn't pink-800 obvs, that was troubleshooting.
.gatsby-resp-image-wrapper {
	@apply mb-6 border border-pink-800 rounded-sm shadow-md;
}

img.screenshot {
	@apply border border-gray-500 rounded-sm shadow-md;
}
*/
